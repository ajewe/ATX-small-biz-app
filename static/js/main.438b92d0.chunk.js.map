{"version":3,"sources":["checkAuth.js","Navigation.js","components/Listings.js","redux/actions.js","components/EachListing.js","components/Login.js","components/AddListing.js","Router.js","redux/reducers.js","redux/store.js","redux/state.js","App.js","serviceWorker.js","index.js"],"names":["checkAuth","cookie","parse","document","Navigation","history","useHistory","AppBar","position","style","background","Toolbar","Typography","variant","flexGrow","className","to","onClick","push","Listings","allListings","useSelector","state","listings","dispatch","useDispatch","listingsToShow","filter","listing","display","justifyContent","paddingTop","TableContainer","maxWidth","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","i","key","component","scope","id","businessName","description","address","operatingHours","icon","faTrashAlt","color","type","value","EachListing","props","listingId","match","params","chosenListing","find","l","findListing","Container","Login","onSubmit","e","preventDefault","TextField","label","Button","marginTop","AddListing","React","useState","newListing","setNewListing","handleTextChange","target","name","payload","length","alert","onChange","ProtectedRoute","Component","rest","render","pathname","from","location","Router","exact","path","combineReducers","action","targetListing","createStore","reducers","App","store","basename","Boolean","window","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.438b92d0.chunk.js","sourcesContent":["import cookie from 'cookie'\n\nexport const checkAuth = () => {\n  const cookies = cookie.parse(document.cookie)\n  return cookies[\"loggedIn\"] ? true : false\n}","import React from 'react'\nimport { checkAuth } from './checkAuth'\nimport { AppBar, Toolbar, Typography } from '@material-ui/core'\nimport { Link, useHistory } from 'react-router-dom'\n\nconst Navigation = () => {\n  const history = useHistory()\n\n  return (\n    <AppBar position=\"relative\" style={{ background: '#3CB371' }}>\n      <Toolbar>\n        <Typography variant=\"h6\" style={{ flexGrow: \"1\" }}>Austin Small Business</Typography>\n        <ul className=\"nav-list\">\n          <li className=\"nav-list-item\">\n            <Link to=\"/\" className=\"nav-anchor\">Listings</Link>\n          </li>\n          {checkAuth() === true ?\n            <>\n              <li className=\"nav-list-item\">\n                <Link to=\"/add\" className=\"nav-anchor\">Add</Link>\n              </li>\n              <li className=\"nav-list-item\"\n                  onClick={()=> {\n                    document.cookie = \"loggedIn=\"\n                    history.push(\"/\")\n                  }}>\n                Logout\n              </li>\n            </>\n          :\n            <li className=\"nav-list-item\">\n              <Link to=\"/login\" className=\"nav-anchor\">Login</Link>\n            </li>\n          }\n        </ul>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default Navigation","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { checkAuth } from '../checkAuth'\nimport { TableContainer, Table, TableHead, TableRow, TableBody, TableCell } from '@material-ui/core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport { removeListing } from '../redux/actions'\n\nconst Listings = () => {\n  const allListings = useSelector(state => state.listings)\n  const dispatch = useDispatch()\n\n  const listingsToShow = allListings.filter(listing => listing.display === true)\n\n  return (\n    <div style={{display: 'flex', justifyContent: 'center', paddingTop: '40px'}}>\n      <TableContainer style={{maxWidth: \"80%\"}}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell>Description</TableCell>\n            <TableCell align=\"left\">Address</TableCell>\n            <TableCell align=\"right\">Hours</TableCell>\n            {checkAuth() === true && <TableCell align=\"right\">Delete</TableCell>}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {listingsToShow.map((listing, i) => (\n            <TableRow key={i}>\n              <TableCell component=\"th\" scope=\"row\">\n                <Link to={`/listing/${listing.id}`}>{listing.businessName}</Link>\n              </TableCell>\n              <TableCell align=\"left\">\n                {listing.description}\n              </TableCell>\n              <TableCell align=\"left\">\n                {listing.address}\n              </TableCell>\n              <TableCell align=\"center\">\n                {listing.operatingHours}\n              </TableCell>\n              {checkAuth() === true && \n                <TableCell align=\"center\">\n                  <FontAwesomeIcon \n                    icon={faTrashAlt}\n                    style={{color: \"red\"}}\n                    onClick={() => dispatch(removeListing(listing.id))}\n                  />\n                </TableCell>\n              }\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  </div>\n  );\n}\n\nexport default Listings","export const addListing = (listing) => {\n  return {\n    type: 'ADD_LISTING',\n    value: listing\n  }\n}\n\nexport const removeListing = (elementId) => {\n  return {\n    type: 'REMOVE_LISTING',\n    value: elementId\n  }\n}","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { Container } from '@material-ui/core';\n\nconst EachListing = (props) => {\n  const listingId = props.match.params.id\n  \n  const findListing = (state) => {\n    return state.listings.find(l => l.id == listingId)\n  }\n\n  const chosenListing = useSelector(state => findListing(state))\n\n  return (\n    <Container maxWidth=\"sm\">\n      <h2>{chosenListing.businessName}</h2>\n      <h3>{chosenListing.address}</h3>\n      <h3>{chosenListing.operatingHours}</h3>\n      <p>{chosenListing.description}</p>\n    </Container>\n  )\n}\nexport default EachListing","import React from 'react'\nimport { Container, TextField, Button } from '@material-ui/core'\nimport { useHistory } from 'react-router-dom'\n\nconst Login = () => {\n  const history = useHistory()\n\n  const userLoggedIn = (e) => {\n    e.preventDefault()\n    document.cookie = \"loggedIn=true;max-age=60*1000\"\n    history.push(\"/\")\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <form className=\"form-class\" onSubmit={userLoggedIn}>\n        <TextField id=\"standard-basic\" label=\"Username\" />\n        <TextField id=\"standard-basic\" label=\"Password\" type=\"password\"/>\n        <Button\n        type=\"submit\"\n        variant=\"contained\" \n        style={{marginTop: \"40px\"}}>\n          LOGIN\n        </Button>\n      </form>\n    </Container>\n  )\n}\n\nexport default Login","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container, TextField, Button } from '@material-ui/core'\nimport { useHistory } from 'react-router-dom'\nimport { addListing } from '../redux/actions'\n\nconst AddListing = () => {\n  const history = useHistory()\n  const allListings = useSelector(state => state.listings)\n  const dispatch = useDispatch()\n\n  const [ newListing, setNewListing ] = React.useState({\n    businessName: \"\",\n    description: \"\",\n    address: \"\",\n    operatingHours: \"\",\n    display: true\n  })\n\n  const handleTextChange = e => {\n    setNewListing({\n      ...newListing,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    const payload = { ...newListing }\n    payload.id = allListings.length + 1\n    dispatch(addListing(payload))\n    alert('Listing added: ' + payload.businessName)\n    history.push(\"/\")\n  }\n\n  return (\n    <Container maxWidth=\"sm\">\n      <form className=\"form-class\" onSubmit={handleSubmit} >\n        <TextField \n          id=\"standard-basic\" \n          label=\"Name\"\n          name=\"businessName\"\n          value={newListing.businessName}\n          onChange={handleTextChange} />\n        <TextField \n          id=\"standard-basic\" \n          label=\"Address\"\n          name=\"address\"\n          value={newListing.address}\n          onChange={handleTextChange} />\n        <TextField \n          id=\"standard-basic\" \n          label=\"Hours (ex. 8AM - 9PM)\"\n          name=\"operatingHours\"\n          value={newListing.operatingHours}\n          onChange={handleTextChange} />\n        <TextField \n          id=\"standard-basic\" \n          label=\"Description\"\n          name=\"description\"\n          value={newListing.description}\n          onChange={handleTextChange} />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          style={{marginTop: \"40px\"}}>\n          SAVE\n        </Button>\n      </form>\n    </Container>\n  )\n}\n\nexport default AddListing","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router'\nimport { checkAuth } from './checkAuth'\nimport Listings from './components/Listings'\nimport EachListing from './components/EachListing'\nimport Login from './components/Login'\nimport AddListing from './components/AddListing'\n\nconst ProtectedRoute = ({component: Component, ...rest}) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => checkAuth() === true ?\n        <Component {...props} />\n        :\n        <Redirect to={{pathname: '/login', state: {from: props.location}}} />\n      }\n    />\n  )\n}\n\nconst Router = () => {\n  return (\n    <Switch>\n      <Route exact path='/' component={Listings} />\n      <Route path=\"/listing/:id\" component={EachListing} />\n      <Route path=\"/login\" component={Login} />\n      <ProtectedRoute path=\"/add\" component={AddListing} />\n    </Switch>\n  )\n}\n\nexport default Router","import { combineReducers } from 'redux'\n\nconst listings = (state = [], action) => {\n  switch(action.type) {\n    case 'ADD_LISTING':\n      return [ ...state, action.value ]\n    case 'REMOVE_LISTING':\n      const listings = [ ...state ]\n      const targetListing = listings.find(listing => listing.id === action.value)\n      targetListing.display = false\n      return listings\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({listings})","import { createStore } from 'redux'\nimport reducers from './reducers'\nimport state from './state'\n\nexport default createStore(reducers, state)","export default {\n  listings: [\n    {\n      \"id\": 1,\n      \"businessName\": \"Home Slice Pizza\",\n      \"description\": \"Home Slice Pizza is an independent neighborhood pizza joint serving authentic NY-style pizza-by the pie or by the slice - to nice people like you. We offer our homemade, hand tossed, bona fide pies for either dine in or carry out\",\n      \"address\": \"1415 S Congress Ave, Austin, TX 78704\",\n      \"operatingHours\": \"11AM - 11PM\",\n      \"display\": true\n    }, \n    {\n      \"id\": 2,\n      \"businessName\": \"Joe's Coffee\",\n      \"description\": \"Stumptown coffee, baked goods & sandwiches in colorful digs wiht outdoor area for people-watching\",\n      \"address\": \"242 W 2nd St, Austin, TX 78701\",\n      \"operatingHours\": \"7AM - 9PM\",\n      \"display\": true\n    },\n    {\n      \"id\": 3,\n      \"businessName\": \"Quack's 43rd Street Bakery\",\n      \"description\": \"Hip coffeehouse with an easygoing vibe selling baked goods, panini & espresso drinks.\",\n      \"address\": \"411 E 43rd St, Austin, TX 78751\",\n      \"operatingHours\": \"7AM - 9PM\",\n      \"display\": true\n    },\n    {\n      \"id\": 4,\n      \"businessName\": \"Hyde Park Market\",\n      \"description\": \"Deli & organic grocer offering a wide selection of beer, wine, tools & international flags.\",\n      \"address\": \"4429 Duval St, Austin, TX 78751\",\n      \"operatingHours\": \"6AM - 12AM\",\n      \"display\": true\n    },\n    {\n      \"id\": 5,\n      \"businessName\": \"G'Raj Mahal\",\n      \"description\": \"This brick-&-mortar outpost of a former food truck serves Indian fare & has a tented space outdoors.\",\n      \"address\": \"73 Rainey St, Austin, TX 78701\",\n      \"operatingHours\": \"12:30PM - 11PM\",\n      \"display\": true\n    }\n  ]\n}","import React from 'react';\nimport './App.css';\nimport Navigation from './Navigation'\nimport Router from './Router'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter basename={'/ATX-small-biz-app'}>\n        <Navigation />\n        <Router />\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}